1 给定一个8*8的方格子，如下图所示，求A点到B点的最短路径有多少条？用算法实现
	从16个动作中选8个作为横走的动作，是一个组合问题，答案为C8/16 , 程序：
	public static void f(int row, int col) {
		if (row < 8) {
			f(row + 1, col);
		}
		if (col < 8) {
			f(row, col + 1);
		}

		if (row == 8 && col == 8) {
			count += 1;
		}
	}
*********************************************************************************
2 3:15，求此时时针和分针夹角的度数
时针在3 +1/4  = 13/4 * 30 角度， 分针在3 = 3*30 角度，两者相差 30/4角度。
*********************************************************************************
3 TCP3次握手和4次挥手
	1 SYN(J) -> SYN(K)+ACK(J+1) -> ACK(K+1)
	3 FIN(M) -> ACK(M+1) -> FIN(N) -> ACK(N+1)
	
	SYN_SENT -> ESTAB -> FIN_WAIT_1 -> FIN_WAIT_2 -> TIME_WAIT -> CLOSED
	LISTEN -> SYN_REVD -> ESTAB -> CLOSE_WAIT -> LAST_ACK -> CLOSED 
	参考 http://pic.e800.com.cn/images/source/2012/9/1/11951_4e851.jpg
	http://www.cnblogs.com/hnrainll/archive/2011/10/14/2212415.html
*********************************************************************************
4 快速排序复杂度分析：
	1 					8			 8				|\
					4 4				4 4				| \----log(N)
				2 2		2 2  	2 2		2 2			| /----
			  1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1		|/
		每层都要遍历完毕，即每层都是N，总共是 Nlog(N)的复杂度，这是最好的情况，最还的情况是有N层，那么就是N^2的复杂度了。
*********************************************************************************
5 数组循环移位
	1 2 3 4 --<1>-->	4 1 2 3 
	like B | A <- (A'|B')' <- (A'|B') <- (A|B)  此为证明
*********************************************************************************
6 大数相加
	利用char数组，判断加法与减法的区别。
*********************************************************************************
7 堆与栈的分配
        堆是大多是由程序员主动来分配，释放交予gc
        栈是由编译器自动分配和释放
*********************************************************************************
8 HashTable 和 HashMap的区别
    HashTable是基于陈旧的Dict接口，同步操作，不允许有null值，
    HashMap基于Map接口，不是同步操作，可允许有null值
*********************************************************************************
9 http://hr.bjx.com.cn/html/20090203/186061.shtml
*********************************************************************************
10 Hotspot 1.6内存分区 
        年轻代
       伊甸区         E
       存活区0    S0
       存活区1    S1
  老年代                  O
  永久代                  P
*********************************************************************************
11 偏向锁
    它会偏向于第一个访问锁的线程，如果在接下来的运行过程中，该锁没有被其他的线程访问，则持有偏向锁的线程将永远不需要触发
*********************************************************************************
12 显式锁
    ReentrantLock
*********************************************************************************
13 内置锁
    Synchronized
*********************************************************************************
14 总结：
    Re 在加锁和内存上提供与内置锁相同的语义，此外它提供了一些其他的功能，包括定时的锁等待、可中断的锁、公平性，以及实现非块结构的加锁。在性能上也略胜于内置锁。读-写锁允许多个读线程并发的访问被保护的线程。当访问以读取操作为主的数据结构时，他能提供程序的可伸缩性
*********************************************************************************
15 调优的性能指标
        内存占用：防止内存交换
        启动时间：在生产环境比较重要
        吞吐量：一段时间内的处理事务量TPS
        响应速度：延迟时间Latency，非常重要，一个常见的错误是使用单一消息的延迟来反应机器性能
*********************************************************************************
16 JVM分析
        内存、CPU分析
        分析器：堆转储、VisualVM，第三方分析器
*********************************************************************************
17 常规调优建议：
        保持简单性
        提供基本参数 -Xms -Xmx,-Xmn
        选择一个GC优先级：权衡吞度量与暂停时间    
        其余参数大多使用默认值
*********************************************************************************
18 堆组成
        永久代：-XX:PermSize -XX:MaxPermSize
        年老代：堆大小-年轻代大小 Xmx-Xmn
        年轻代：-Xmn
*********************************************************************************
19  吞度量优先：-XX:+UseParallelOldGC
        短停顿优先：-XX:+UseConMarkSweepGC
*********************************************************************************
20 查看JVM状态：jstat -option vmid [<interval> [<count>]]
    -class -compiler -gc -gccause -gcutil ...
*********************************************************************************
21 一部分数据结构的命名和处理框架参考了JAIN SLEE 这也是一个规范面向因特网与智能网的融和领域 Service Logic Execute Enviroment
*********************************************************************************
22 treeMap是红黑树的实现，查找、插入、删除都是log(n)的复杂度，是一种平衡二叉树
*********************************************************************************
23 AVL 平衡二叉树，左右两棵子树的高度差不高于1，且左右两棵子树是平衡二叉树 ， like GNU is Not UNIX
*********************************************************************************
24 带路径压缩的并查集，路径压缩实际上是在找完根节点之后，在递归回来的时候顺便吧路径上所有的元素都指向根节点
*********************************************************************************
25 写具有cache friendly的代码，分为时间上的和空间上的
*********************************************************************************
26 线程状态：
    New 尚未启动的线程；RUNNABLE 在运行的线程；BLOCKED 受阻塞并等待一个监视器锁的线程；WAITING 无限期等待；TIMED_WAITING 指定时间的等待；TERMINATED 已退出的线程
*********************************************************************************
27 linux多线程同步机制：互斥锁(Mutex), 条件变量(Condition，与lock联合使用),Semaphore 信号量
*********************************************************************************
28 thrift protobuf 
*********************************************************************************

